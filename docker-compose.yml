version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: yuno
      POSTGRES_USER: yuno
      POSTGRES_PASSWORD: ${DB_PASSWORD:-yunopassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yuno -d yuno"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    environment:
      NODE_ENV: production
      DATABASE_URL: "postgresql://yuno:${DB_PASSWORD:-yunopassword}@postgres:5432/yuno"
      ONTONG_API_KEY: ${ONTONG_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      KAKAO_REST_API_KEY: ${KAKAO_REST_API_KEY}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      APPLE_CLIENT_ID: ${APPLE_CLIENT_ID}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
